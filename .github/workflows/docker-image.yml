name: docker-image
on:
  pull_request:
    branches:
      - main
  release:
    types: [published]
  push:
    branches:
      - main
env:
  IMAGE_NAME: ghcr.io/quiknode-labs/docker-ansible-core
  LATEST_OS: ubuntu
  LATEST_VERSION: v2.17
jobs:
  build_and_push_on_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        os: [ubuntu]
        version: [v2.16]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        id: prep
        run: |
          # Copy the appropriate requirements file
          cp requirements/${MATRIX_VERSION}/requirements.txt requirements/requirements.txt

          # Extract the full ansible-core version (e.g. "2.16.14")
          ANSIBLE_CORE_VERSION=$(grep ansible-core requirements/${MATRIX_VERSION}/requirements.txt | cut -d "=" -f 3)

          # Create both the patch version tag and the legacy matrix version tag
          TAGS="${IMAGE_NAME}:${ANSIBLE_CORE_VERSION}-${MATRIX_OS},${IMAGE_NAME}:${MATRIX_VERSION}-${MATRIX_OS}"
          # If running on the latest OS, add additional tags.
          if [[ "$MATRIX_OS" == "$LATEST_OS" ]]; then
            TAGS="${TAGS},${IMAGE_NAME}:${ANSIBLE_CORE_VERSION}"
            # Also handle 'latest' if this is the latest version you expect
            if [[ "$MATRIX_VERSION" == "$LATEST_VERSION" ]]; then
              TAGS="${TAGS},${IMAGE_NAME}:latest-${MATRIX_OS},${IMAGE_NAME}:latest"
            fi
          elif [[ "$MATRIX_VERSION" == "$LATEST_VERSION" ]]; then
            TAGS="${TAGS},${IMAGE_NAME}:latest-${MATRIX_OS}"
          fi

          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
        env:
          MATRIX_OS: ${{ matrix.os }}
          MATRIX_VERSION: ${{ matrix.version }}

      - name: Set up QEMU to support cross-architecture builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Build Image and push to ghcr only on Release
        uses: docker/build-push-action@v6
        with:
          platforms: linux/arm64
          labels: |
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.version=${{ matrix.version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.name }}
          context: .
          file: ./Dockerfile.${{ matrix.os }}
          tags: ${{ steps.prep.outputs.tags }}
          # Push only on release events; for PRs, just build.
          push: true
